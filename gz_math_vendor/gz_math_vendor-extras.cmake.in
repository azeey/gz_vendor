find_package(@LIB_NAME@@LIB_VER_MAJOR@ REQUIRED COMPONENTS all)

# Set up the core library and add it to the list of all components
add_library(gz::@LIB_DESIGNATOR@::core ALIAS @LIB_NAME@@LIB_VER_MAJOR@::@LIB_NAME@@LIB_VER_MAJOR@)
set(ALL_COMPONENTS gz::@LIB_DESIGNATOR@::core)

# Retrieve the list of components
get_target_property(components @LIB_NAME@@LIB_VER_MAJOR@::requested INTERFACE_LINK_LIBRARIES)

foreach(component ${components})
  # Skip the core library
  if (${component} STREQUAL @LIB_NAME@@LIB_VER_MAJOR@::@LIB_NAME@@LIB_VER_MAJOR@)
    continue()
  endif()

  # Skip the -all target
  if (${component} STREQUAL @LIB_NAME@@LIB_VER_MAJOR@::@LIB_NAME@@LIB_VER_MAJOR@-all)
    continue()
  endif()

  # Change "gz-libN::gz-libN-component" to "component"
  string(REGEX REPLACE "@LIB_NAME@@LIB_VER_MAJOR@::@LIB_NAME@@LIB_VER_MAJOR@-" "" component_name ${component})
  add_library(gz::@LIB_DESIGNATOR@::${component_name} ALIAS ${component})
  list(APPEND ALL_COMPONENTS gz::@LIB_DESIGNATOR@::${component_name})
endforeach()

# Add a root gz::lib alias
add_library(gz::@LIB_DESIGNATOR@ INTERFACE IMPORTED)
target_link_libraries(gz::@LIB_DESIGNATOR@ INTERFACE gz::@LIB_DESIGNATOR@::core ${ALL_COMPONENTS})
